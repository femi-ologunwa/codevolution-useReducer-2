{"version":3,"sources":["DataFetchingOne.js","App.js","index.js"],"names":["initialState","loading","error","post","reducer","state","action","type","payload","DataFetchingOne","useReducer","dispatch","useEffect","axios","get","then","response","data","catch","title","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAIMA,EAAe,CAClBC,SAAS,EACTC,MAAO,GACPC,KAAM,IAIHC,EAAU,SAACC,EAAOC,GACrB,OAAQA,EAAOC,MACZ,IAAK,gBACF,MAAO,CACJN,SAAS,EACTC,MAAO,GACPC,KAAMG,EAAOE,SAGnB,IAAK,cACF,MAAO,CACJP,SAAS,EACTC,MAAO,uBACPC,KAAM,IAEZ,QACG,OAAOE,IA8BDI,MA1Bf,WAA4B,IAAD,EACEC,qBAAWN,EAASJ,GADtB,mBACjBK,EADiB,KACVM,EADU,KAexB,OAXAC,qBAAU,WACPC,IACIC,IAAI,gDACJC,MAAK,SAACC,GACJL,EAAS,CAAEJ,KAAM,gBAAiBC,QAASQ,EAASC,UAEtDC,OAAM,SAAChB,GACLS,EAAS,CAAEJ,KAAM,qBAEvB,IAECF,EAAMJ,QACA,0CAGNI,EAAMH,MACA,4BAAKG,EAAMH,OAGd,4BAAKG,EAAMF,KAAKgB,QCxCXC,MAVf,WACG,OACG,8BACG,6BACG,kBAAC,EAAD,SCHZC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.5102c2bf.chunk.js","sourcesContent":["import React, { useReducer, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n//initial state\r\nconst initialState = {\r\n   loading: true,\r\n   error: '',\r\n   post: {},\r\n};\r\n\r\n//reducer function\r\nconst reducer = (state, action) => {\r\n   switch (action.type) {\r\n      case 'FETCH_SUCCESS':\r\n         return {\r\n            loading: false,\r\n            error: '',\r\n            post: action.payload,\r\n         };\r\n\r\n      case 'FETCH_ERROR':\r\n         return {\r\n            loading: false,\r\n            error: 'Something went wrong',\r\n            post: {},\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n\r\nfunction DataFetchingOne() {\r\n   const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n   //fetching data from api & updating state\r\n   useEffect(() => {\r\n      axios\r\n         .get('https://jsonplaceholder.typicode.com/posts/1')\r\n         .then((response) => {\r\n            dispatch({ type: 'FETCH_SUCCESS', payload: response.data });\r\n         })\r\n         .catch((error) => {\r\n            dispatch({ type: 'FETCH_ERROR' });\r\n         });\r\n   }, []);\r\n\r\n   if (state.loading) {\r\n      return <h3>Loading...</h3>;\r\n   }\r\n\r\n   if (state.error) {\r\n      return <h3>{state.error}</h3>;\r\n   }\r\n\r\n   return <h3>{state.post.title}</h3>;\r\n}\r\n\r\nexport default DataFetchingOne;\r\n","import React from 'react';\nimport DataFetchingOne from './DataFetchingOne';\nimport './index.css';\n\nfunction App() {\n   return (\n      <main>\n         <div>\n            <DataFetchingOne />\n         </div>\n      </main>\n   );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}